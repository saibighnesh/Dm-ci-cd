name: Android Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Deploy Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
    
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
 
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
 
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest
 
      - name: Decode service account key
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > app/google-services.json
 
      - name: Decode keystore
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > release.keystore
 
      - name: Create keystore.properties
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "storeFile=../release.keystore" > keystore.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> keystore.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> keystore.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> keystore.properties
        working-directory: ./app
 
      - name: Update app version
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          # Get current versionCode from build.gradle
          CURRENT_VERSION_CODE=$(grep -o "versionCode [0-9]*" app/build.gradle | awk '{print $2}')
          NEW_VERSION_CODE=${{ github.run_number }}
          echo "Updating versionCode from $CURRENT_VERSION_CODE to $NEW_VERSION_CODE"
          sed -i "s/versionCode $CURRENT_VERSION_CODE/versionCode $NEW_VERSION_CODE/" app/build.gradle
 
      - name: Build Android APK
        run: ./gradlew assembleRelease
 
      - name: Verify APK exists
        run: |
          if [ ! -f app/build/outputs/apk/release/app-release.apk ]; then
            echo "APK file not found!"
            exit 1
          fi
 
      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk
          retention-days: 5
 
      - name: Upload to Firebase App Distribution
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID_ANDROID }}
          token: ${{ secrets.FIREBASE_CLI_TOKEN }}
          testers: ${{ secrets.FIREBASE_TESTERS }}
          file: app/build/outputs/apk/release/app-release.apk
          releaseNotes: "Build ${{ github.run_number }} from GitHub Actions"